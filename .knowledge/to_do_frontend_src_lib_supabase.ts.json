{"is_source_file": true, "format": "TypeScript", "description": "This file manages interactions with a Supabase backend, providing functionalities to fetch, add, update, and delete 'to-do' items via a client created with environment-configured credentials. It exports the main operations related to 'todos' and defines the 'Todo' data structure.", "external_files": ["@supabase/supabase-js"], "external_methods": ["createClient", "SupabaseClient"], "published": ["fetchTodos", "addTodo", "updateTodo", "deleteTodo"], "classes": [], "methods": [{"name": "function getClient(): SupabaseClient | null { getClient", "description": "Lazy-initializes and returns a singleton instance of the Supabase client using environment variables.", "scope": "", "scopeKind": ""}, {"name": "export async function fetchTodos(): Promise<{ data: Todo[] | null; error: string | null }> { fetchTodos", "description": "Fetches all to-do items from the 'todos' table, ordered by creation date descending.", "scope": "", "scopeKind": ""}, {"name": "export async function addTodo(payload: { title: string; description?: string }): Promise<{ data:/ addTodo", "description": "Inserts a new to-do item into the 'todos' table with provided title and optional description.", "scope": "", "scopeKind": ""}, {"name": "export async function updateTodo(id: string, changes: Partial<Pick<Todo, 'title' | 'description'/ updateTodo", "description": "Updates an existing to-do item specified by ID with provided changes.", "scope": "", "scopeKind": ""}, {"name": "export async function deleteTodo(id: string): Promise<{ success: boolean; error: string | null }/ deleteTodo", "description": "Deletes a to-do item identified by ID.", "scope": "", "scopeKind": ""}], "calls": ["createClient", "client.from", "client.from().select", "client.from().insert", "client.from().update", "client.from().delete", "client.from().eq"], "search-terms": ["supabase", "todo", "CRUD", "typescript", "SupabaseClient", "environment variables", "database table"], "state": 2, "file_id": 8, "knowledge_revision": 17, "git_revision": "", "ctags": [{"_type": "tag", "name": "SUPABASE_KEY", "path": "/home/kavia/workspace/code-generation/smart-to-do-organizer-21555-21564/to_do_frontend/src/lib/supabase.ts", "pattern": "/^const SUPABASE_KEY = process.env.EXPO_PUBLIC_SUPABASE_KEY as string;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "SUPABASE_URL", "path": "/home/kavia/workspace/code-generation/smart-to-do-organizer-21555-21564/to_do_frontend/src/lib/supabase.ts", "pattern": "/^const SUPABASE_URL = process.env.EXPO_PUBLIC_SUPABASE_URL as string;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "SupabaseClient", "path": "/home/kavia/workspace/code-generation/smart-to-do-organizer-21555-21564/to_do_frontend/src/lib/supabase.ts", "pattern": "/^import { createClient, type SupabaseClient } from '@supabase\\/supabase-js';$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "Todo", "path": "/home/kavia/workspace/code-generation/smart-to-do-organizer-21555-21564/to_do_frontend/src/lib/supabase.ts", "pattern": "/^export type Todo = {$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "addTodo", "path": "/home/kavia/workspace/code-generation/smart-to-do-organizer-21555-21564/to_do_frontend/src/lib/supabase.ts", "pattern": "/^export async function addTodo(payload: { title: string; description?: string }): Promise<{ data:/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "client", "path": "/home/kavia/workspace/code-generation/smart-to-do-organizer-21555-21564/to_do_frontend/src/lib/supabase.ts", "pattern": "/^  const client = getClient();$/", "language": "TypeScript", "kind": "constant", "scope": "addTodo", "scopeKind": "function"}, {"_type": "tag", "name": "client", "path": "/home/kavia/workspace/code-generation/smart-to-do-organizer-21555-21564/to_do_frontend/src/lib/supabase.ts", "pattern": "/^  const client = getClient();$/", "language": "TypeScript", "kind": "constant", "scope": "deleteTodo", "scopeKind": "function"}, {"_type": "tag", "name": "client", "path": "/home/kavia/workspace/code-generation/smart-to-do-organizer-21555-21564/to_do_frontend/src/lib/supabase.ts", "pattern": "/^  const client = getClient();$/", "language": "TypeScript", "kind": "constant", "scope": "fetchTodos", "scopeKind": "function"}, {"_type": "tag", "name": "client", "path": "/home/kavia/workspace/code-generation/smart-to-do-organizer-21555-21564/to_do_frontend/src/lib/supabase.ts", "pattern": "/^  const client = getClient();$/", "language": "TypeScript", "kind": "constant", "scope": "updateTodo", "scopeKind": "function"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/smart-to-do-organizer-21555-21564/to_do_frontend/src/lib/supabase.ts", "pattern": "/^  const { data, error } = await client$/", "language": "TypeScript", "kind": "constant", "scope": "addTodo", "scopeKind": "function"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/smart-to-do-organizer-21555-21564/to_do_frontend/src/lib/supabase.ts", "pattern": "/^  const { data, error } = await client.from('todos').select('*').order('created_at', { ascending/", "language": "TypeScript", "kind": "constant", "scope": "fetchTodos", "scopeKind": "function"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/smart-to-do-organizer-21555-21564/to_do_frontend/src/lib/supabase.ts", "pattern": "/^  const { data, error } = await client.from('todos').update(changes).eq('id', id).select('*').si/", "language": "TypeScript", "kind": "constant", "scope": "updateTodo", "scopeKind": "function"}, {"_type": "tag", "name": "deleteTodo", "path": "/home/kavia/workspace/code-generation/smart-to-do-organizer-21555-21564/to_do_frontend/src/lib/supabase.ts", "pattern": "/^export async function deleteTodo(id: string): Promise<{ success: boolean; error: string | null }/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/code-generation/smart-to-do-organizer-21555-21564/to_do_frontend/src/lib/supabase.ts", "pattern": "/^  const { data, error } = await client$/", "language": "TypeScript", "kind": "constant", "scope": "addTodo", "scopeKind": "function"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/code-generation/smart-to-do-organizer-21555-21564/to_do_frontend/src/lib/supabase.ts", "pattern": "/^  const { data, error } = await client.from('todos').select('*').order('created_at', { ascending/", "language": "TypeScript", "kind": "constant", "scope": "fetchTodos", "scopeKind": "function"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/code-generation/smart-to-do-organizer-21555-21564/to_do_frontend/src/lib/supabase.ts", "pattern": "/^  const { data, error } = await client.from('todos').update(changes).eq('id', id).select('*').si/", "language": "TypeScript", "kind": "constant", "scope": "updateTodo", "scopeKind": "function"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/code-generation/smart-to-do-organizer-21555-21564/to_do_frontend/src/lib/supabase.ts", "pattern": "/^  const { error } = await client.from('todos').delete().eq('id', id);$/", "language": "TypeScript", "kind": "constant", "scope": "deleteTodo", "scopeKind": "function"}, {"_type": "tag", "name": "fetchTodos", "path": "/home/kavia/workspace/code-generation/smart-to-do-organizer-21555-21564/to_do_frontend/src/lib/supabase.ts", "pattern": "/^export async function fetchTodos(): Promise<{ data: Todo[] | null; error: string | null }> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getClient", "path": "/home/kavia/workspace/code-generation/smart-to-do-organizer-21555-21564/to_do_frontend/src/lib/supabase.ts", "pattern": "/^function getClient(): SupabaseClient | null {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "supabase", "path": "/home/kavia/workspace/code-generation/smart-to-do-organizer-21555-21564/to_do_frontend/src/lib/supabase.ts", "pattern": "/^let supabase: SupabaseClient | null = null;$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "updateTodo", "path": "/home/kavia/workspace/code-generation/smart-to-do-organizer-21555-21564/to_do_frontend/src/lib/supabase.ts", "pattern": "/^export async function updateTodo(id: string, changes: Partial<Pick<Todo, 'title' | 'description'/", "language": "TypeScript", "kind": "function"}], "hash": "20240545d012d4b037c4e95cb65be6ae", "format-version": 4, "code-base-name": "to_do_frontend", "filename": "to_do_frontend/src/lib/supabase.ts", "fields": [{"name": "let supabase: SupabaseClient | null = null;", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"17": ""}]}